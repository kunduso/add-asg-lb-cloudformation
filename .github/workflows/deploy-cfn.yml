name: deploy-cloudformation

on:
  workflow_dispatch:
  push:
    branches: [ '*' ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'

permissions: read-all
#--------------------------
#
# PLEASE READ: Add a GitHub Actions variable 'INFRACOST_SCAN_TYPE' and set the value to either 'hcl_code' or 'tf_plan' depending on what type of Infracost scan desired.
#
#--------------------------
jobs:
  deploy:
    name: 'continuous-integration'
    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.IAM_ROLE }}
        role-session-name: AWSSession
        aws-region: us-east-2
    # - name: Generate Unique ID
    #   id: unique_id
    #   run: echo "UNIQUE_ID=$(date +'%Y%m%d')-${{ github.run_number }}-${{ github.run_attempt }}" >> $GITHUB_ENV

    - name: Deploy Layer Zero to AWS CloudFormation
      run: |
        aws cloudformation deploy \
          --template ./templates/layer-zero.yaml \
          --stack-name layer-zero \
          --parameter-overrides file://./parameters/layer-zero.json \
          --role-arn ${{ secrets.CFN_ROLE }} \
          --no-fail-on-empty-changeset

    - name: Deploy Layer One to AWS CloudFormation
      run: |
        aws cloudformation deploy \
          --template ./templates/layer-one.yaml \
          --stack-name layer-one \
          --parameter-overrides file://./parameters/layer-one.json \
          --role-arn ${{ secrets.CFN_ROLE }} \
          --no-fail-on-empty-changeset
  
    # - name: Deploy to AWS CloudFormation
    #   run: |
    #     aws cloudformation create-change-set \
    #       --template-body file://./templates/layer-zero.yaml \
    #       --stack-name layer-zero \
    #       --parameters file://./parameters/layer-zero.json \
    #       --change-set-name layer-zero-changeset-${{ env.UNIQUE_ID }} \
    #   env:
    #     UNIQUE_ID: ${{ env.UNIQUE_ID }}